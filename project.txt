AI Chatbot Project Documentation
==============================

## Overview
This project is an AI-powered chatbot web application built with Next.js, React, and TypeScript. It leverages modern UI libraries and integrates with AI SDKs to provide a conversational assistant experience.

## Tech Stack
- **Framework:** Next.js (App Router)
- **Language:** TypeScript, React 19
- **Styling:** Tailwind CSS
- **UI Components:** Radix UI, shadcn/ui
- **AI Integration:** @ai-sdk/openai, ai
- **Linting:** ESLint

## Directory Structure
- `/src/app/` — Main application code
  - `page.tsx` — Main chat UI page
  - `layout.tsx` — App layout
  - `api/` — API routes (e.g., `/api/chat`)
- `/src/components/ui/` — Reusable UI components (Button, Card, Input, etc.)
- `/src/lib/` — Utility functions
- `/public/` — Static assets (SVGs, favicon)
- `project.txt` — Project documentation (this file)
- `README.md` — Quickstart and reference

## Setup & Running
1. **Install dependencies:**
   ```bash
   npm install
   ```
2. **Start development server:**
   ```bash
   npm run dev
   ```
   The app will be available at [http://localhost:3000](http://localhost:3000).

## Linting
- Run ESLint to check code quality:
  ```bash
  npm run lint
  ```
- The config allows unused function arguments if they start with `_` (e.g., `_req`).

## Testing
- The project uses **Jest** and **React Testing Library** for unit and integration tests, with Babel for transforming TypeScript and JSX.
- Test files should be named with `.test.ts` or `.test.tsx` and placed next to the code they test (e.g., `Button` → `button.test.tsx`).
- A sample test is provided in `src/components/ui/button.test.tsx`.
- Run all tests with:
  ```bash
  npm test
  ```
- Babel is configured in `babel.config.js` to use the automatic JSX runtime for React 17+ compatibility.

## Contribution & Development Notes
- Follow best practices for React and Next.js.
- Use TypeScript for all new code.
- UI components should be placed in `/src/components/ui/`.
- API routes go in `/src/app/api/`.
- Keep code clean and run `npm run lint` before committing.

## License
Specify your license here (MIT, Apache, etc.) if open source.

---
For more details, see the README.md or contact the project maintainer.
